PRÁCTICA 2: VERIFICACIÓN EMPÍRICA DE LA COMPLEJIDAD DE ALGORITMOS DE ORDENACIÓN POR INSERCIÓN Y SHELL


Hugo Bouza Fernández, Rafael Casás Lamas y Xosé Castro González

1. Introducción.
En este informe se presenta la implementación y análisis experimental de los algoritmos de ordenación por inserción y shell.
El estudio se centra en evaluar el rendimiento de estos dos métodos bajo las distintas configuraciones iniciales que se requieren en el enunciado.


2. Ejercicio 1.
Los dos algoritmos se encuentran implementados en el documento .py adjunto.

3. Ejercicio 2. 
La comprobación de que los algoritmos funcionan correctamente es la siguiente:

--- Ordenación por Inserción (Vector Aleatorio de n=11) ---
Vector Original: [0, -1, -7, -1, -10, 5, 3, -3, -5, 11, -9]
Vector Ordenado: [-10, -9, -7, -5, -3, -1, -1, 0, 3, 5, 11]
Ordenado? True

--- Ordenación Shell (Vector Descendente de n=11) ---
Vector Original: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Secuencia Hibbard: [3, 1] (Primer incremento debe ser 1: True)
Vector Ordenado: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Ordenado? True

Secuencia Knuth: [4, 1] (Primer incremento debe ser 1: True)
Vector Ordenado: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Ordenado? True

Secuencia Sedgewick: [1] (Primer incremento debe ser 1: True)
Vector Ordenado: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Ordenado? True

Secuencia Ciura: [4, 1] (Primer incremento debe ser 1: True)
Vector Ordenado: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Ordenado? True


4. Ejercicio 3.
